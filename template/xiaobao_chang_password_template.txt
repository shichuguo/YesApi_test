'''
@author: liudongjie
@software: SeleniumTest
@file: xiaobao_chang_password_data.py
@time: 2020/4/2 22:09
@desc:
'''

import unittest
import requests
import ddt
import json
from lib.utils import *
from setting import *

@ddt.ddt
class %(class_name)s(unittest.TestCase):

    @ddt.file_data(DATA_PATH.joinpath('%(data_file)s.yaml'))
    def test_%(method_name)s(self,**case):
        url = case.get('url')
        method = case.get('method')
        login_data = case.get('login_data')
        check = case.get('check')
        if 'password' in login_data and len(login_data['password']) != 32:
            login_data['password'] = hash_code(login_data['password']) #加密密码
        if method.lower() == 'post': #判断使用的请求方式
            res = requests.post(url,data=login_data)
            resp = res.text
        else:
            res = requests.get(url,params=login_data)
            resp = res.text
        resp_dict = json.loads(resp)
        token = resp_dict.get('data').get('token')
        change_password_data = case.get('change_password_data')
        if 'uuid' in change_password_data:
            change_password_data['token'] = token
        else:
            pass
        if 'old_password' in change_password_data and len(change_password_data['old_password']) != 32\
                and 'new_password' in change_password_data and len(change_password_data['new_password']):
            change_password_data['old_password'] = hash_code(change_password_data['old_password']) #加密旧密码
            change_password_data['new_password'] = hash_code(change_password_data['new_password'])  # 加密新密码
        if method.lower() == 'post': #判断使用的请求方式
            res1 = requests.post(url,data=change_password_data)
            resp1 = res1.text
        else:
            res1 = requests.get(url,params=change_password_data)
            resp1 = res1.text
            # 断言
        results = set_res_data(resp1)  # 替换字符串拿到想要的数据
        for c in check:
            self.assertIn(c, results)


if __name__ == '__main__':
    unittest.main()